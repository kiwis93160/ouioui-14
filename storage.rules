rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isAuthenticated() {
      return request.auth != null &&
        request.auth.token.roleId is string &&
        request.auth.token.roleId != '';
    }

    function getPermission(path) {
      return isAuthenticated() && request.auth.token.permissions is map
        ? request.auth.token.permissions[path]
        : null;
    }

    function hasReadAccess(path) {
      return getPermission(path) == 'editor' || getPermission(path) == 'readonly';
    }

    function hasWriteAccess(path) {
      return getPermission(path) == 'editor';
    }

    match /site_assets/{assetPath=**} {
      allow read: if hasReadAccess('/site-editor');
      allow write: if hasWriteAccess('/site-editor');
    }

    match /product_images/{imagePath=**} {
      allow read: if hasReadAccess('/produits');
      allow write: if hasWriteAccess('/produits');
    }

    match /takeaway_receipts/{receiptPath=**} {
      allow read: if hasReadAccess('/para-llevar');
      allow write: if hasWriteAccess('/para-llevar');
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
